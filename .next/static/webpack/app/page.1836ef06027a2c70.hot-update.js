"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/data/reactions.ts":
/*!*******************************!*\
  !*** ./src/data/reactions.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findReaction: function() { return /* binding */ findReaction; },\n/* harmony export */   getReactionsByType: function() { return /* binding */ getReactionsByType; },\n/* harmony export */   reactions: function() { return /* binding */ reactions; }\n/* harmony export */ });\nconst reactions = [\n    // Basic combinations\n    {\n        id: \"h2-o2-h2o\",\n        reactants: [\n            \"H\",\n            \"H\",\n            \"O\"\n        ],\n        products: [\n            \"H2O\"\n        ],\n        equation: \"2H₂ + O₂ → 2H₂O\",\n        balancedEquation: \"2H₂ + O₂ → 2H₂O\",\n        name: \"Water Formation\",\n        type: \"synthesis\",\n        description: \"Hydrogen and oxygen combine to form water in a highly exothermic reaction.\",\n        conditions: \"Spark or heat required\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"na-cl-nacl\",\n        reactants: [\n            \"Na\",\n            \"Cl\"\n        ],\n        products: [\n            \"NaCl\"\n        ],\n        equation: \"Na + Cl₂ → NaCl\",\n        balancedEquation: \"2Na + Cl₂ → 2NaCl\",\n        name: \"Sodium Chloride Formation\",\n        type: \"synthesis\",\n        description: \"Sodium metal reacts violently with chlorine gas to form table salt.\",\n        conditions: \"Room temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"h-cl-hcl\",\n        reactants: [\n            \"H\",\n            \"Cl\"\n        ],\n        products: [\n            \"HCl\"\n        ],\n        equation: \"H₂ + Cl₂ → 2HCl\",\n        balancedEquation: \"H₂ + Cl₂ → 2HCl\",\n        name: \"Hydrogen Chloride Formation\",\n        type: \"synthesis\",\n        description: \"Hydrogen and chlorine gases combine to form hydrochloric acid.\",\n        conditions: \"Light or heat\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"c-o2-co2\",\n        reactants: [\n            \"C\",\n            \"O\",\n            \"O\"\n        ],\n        products: [\n            \"CO2\"\n        ],\n        equation: \"C + O₂ → CO₂\",\n        balancedEquation: \"C + O₂ → CO₂\",\n        name: \"Carbon Dioxide Formation\",\n        type: \"combustion\",\n        description: \"Carbon burns in oxygen to form carbon dioxide.\",\n        conditions: \"High temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"mg-o2-mgo\",\n        reactants: [\n            \"Mg\",\n            \"O\"\n        ],\n        products: [\n            \"MgO\"\n        ],\n        equation: \"2Mg + O₂ → 2MgO\",\n        balancedEquation: \"2Mg + O₂ → 2MgO\",\n        name: \"Magnesium Oxide Formation\",\n        type: \"synthesis\",\n        description: \"Magnesium burns with a bright white light to form magnesium oxide.\",\n        conditions: \"High temperature\",\n        energy: \"exothermic\"\n    },\n    // Acid-Base reactions\n    {\n        id: \"h-o-h2o\",\n        reactants: [\n            \"H\",\n            \"O\",\n            \"H\"\n        ],\n        products: [\n            \"H2O\"\n        ],\n        equation: \"H⁺ + OH⁻ → H₂O\",\n        balancedEquation: \"H⁺ + OH⁻ → H₂O\",\n        name: \"Neutralization\",\n        type: \"acid-base\",\n        description: \"Hydrogen ions and hydroxide ions combine to form water.\",\n        conditions: \"Aqueous solution\",\n        energy: \"exothermic\"\n    },\n    // More complex reactions\n    {\n        id: \"fe-o2-fe2o3\",\n        reactants: [\n            \"Fe\",\n            \"O\"\n        ],\n        products: [\n            \"Fe2O3\"\n        ],\n        equation: \"4Fe + 3O₂ → 2Fe₂O₃\",\n        balancedEquation: \"4Fe + 3O₂ → 2Fe₂O₃\",\n        name: \"Iron Oxide Formation (Rust)\",\n        type: \"oxidation\",\n        description: \"Iron oxidizes in the presence of oxygen to form rust.\",\n        conditions: \"Moisture and oxygen\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"ca-h2o-caoh2\",\n        reactants: [\n            \"Ca\",\n            \"H\",\n            \"O\"\n        ],\n        products: [\n            \"Ca(OH)2\",\n            \"H2\"\n        ],\n        equation: \"Ca + 2H₂O → Ca(OH)₂ + H₂\",\n        balancedEquation: \"Ca + 2H₂O → Ca(OH)₂ + H₂\",\n        name: \"Calcium Hydroxide Formation\",\n        type: \"single-displacement\",\n        description: \"Calcium reacts with water to form calcium hydroxide and hydrogen gas.\",\n        conditions: \"Room temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"hcl-naoh-nacl\",\n        reactants: [\n            \"HCl\",\n            \"NaOH\"\n        ],\n        products: [\n            \"NaCl\",\n            \"H2O\"\n        ],\n        equation: \"HCl + NaOH → NaCl + H₂O\",\n        balancedEquation: \"HCl + NaOH → NaCl + H₂O\",\n        name: \"Neutralization Reaction\",\n        type: \"acid-base\",\n        description: \"Hydrochloric acid reacts with sodium hydroxide to form salt and water.\",\n        conditions: \"Room temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"caco3-hcl-cacl2\",\n        reactants: [\n            \"CaCO3\",\n            \"HCl\"\n        ],\n        products: [\n            \"CaCl2\",\n            \"CO2\",\n            \"H2O\"\n        ],\n        equation: \"CaCO₃ + 2HCl → CaCl₂ + CO₂ + H₂O\",\n        balancedEquation: \"CaCO₃ + 2HCl → CaCl₂ + CO₂ + H₂O\",\n        name: \"Calcium Carbonate Reaction\",\n        type: \"acid-carbonate\",\n        description: \"Calcium carbonate reacts with hydrochloric acid to produce calcium chloride, carbon dioxide, and water.\",\n        conditions: \"Room temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"zn-hcl-zncl2\",\n        reactants: [\n            \"Zn\",\n            \"HCl\"\n        ],\n        products: [\n            \"ZnCl2\",\n            \"H2\"\n        ],\n        equation: \"Zn + 2HCl → ZnCl₂ + H₂\",\n        balancedEquation: \"Zn + 2HCl → ZnCl₂ + H₂\",\n        name: \"Zinc and Hydrochloric Acid\",\n        type: \"single-displacement\",\n        description: \"Zinc displaces hydrogen from hydrochloric acid, producing zinc chloride and hydrogen gas.\",\n        conditions: \"Room temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"nh3-hcl-nh4cl\",\n        reactants: [\n            \"NH3\",\n            \"HCl\"\n        ],\n        products: [\n            \"NH4Cl\"\n        ],\n        equation: \"NH₃ + HCl → NH₄Cl\",\n        balancedEquation: \"NH₃ + HCl → NH₄Cl\",\n        name: \"Ammonium Chloride Formation\",\n        type: \"acid-base\",\n        description: \"Ammonia reacts with hydrogen chloride gas to form solid ammonium chloride.\",\n        conditions: \"Dry conditions\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"c-h2-o2-co2\",\n        reactants: [\n            \"C\",\n            \"O2\"\n        ],\n        products: [\n            \"CO2\"\n        ],\n        equation: \"C + O₂ → CO₂\",\n        balancedEquation: \"C + O₂ → CO₂\",\n        name: \"Carbon Combustion\",\n        type: \"combustion\",\n        description: \"Carbon burns in oxygen to form carbon dioxide gas.\",\n        conditions: \"High temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"n2-h2-nh3\",\n        reactants: [\n            \"N2\",\n            \"H2\"\n        ],\n        products: [\n            \"NH3\"\n        ],\n        equation: \"N₂ + 3H₂ → 2NH₃\",\n        balancedEquation: \"N₂ + 3H₂ → 2NH₃\",\n        name: \"Haber Process\",\n        type: \"synthesis\",\n        description: \"Nitrogen reacts with hydrogen under pressure to form ammonia.\",\n        conditions: \"High pressure, iron catalyst\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"s-o2-so2\",\n        reactants: [\n            \"S\",\n            \"O2\"\n        ],\n        products: [\n            \"SO2\"\n        ],\n        equation: \"S + O₂ → SO₂\",\n        balancedEquation: \"S + O₂ → SO₂\",\n        name: \"Sulfur Combustion\",\n        type: \"combustion\",\n        description: \"Sulfur burns in oxygen to form sulfur dioxide.\",\n        conditions: \"Ignition temperature\",\n        energy: \"exothermic\"\n    },\n    {\n        id: \"ch4-o2-co2-h2o\",\n        reactants: [\n            \"CH4\",\n            \"O2\"\n        ],\n        products: [\n            \"CO2\",\n            \"H2O\"\n        ],\n        equation: \"CH₄ + 2O₂ → CO₂ + 2H₂O\",\n        balancedEquation: \"CH₄ + 2O₂ → CO₂ + 2H₂O\",\n        name: \"Methane Combustion\",\n        type: \"combustion\",\n        description: \"Methane combusts in oxygen to form carbon dioxide and water.\",\n        conditions: \"Heat or spark\",\n        energy: \"highly exothermic\"\n    }\n];\nconst findReaction = (reactantSymbols)=>{\n    // Sort reactants for comparison\n    const sortedReactants = [\n        ...reactantSymbols\n    ].sort();\n    for (const reaction of reactions){\n        const reactionReactants = [\n            ...reaction.reactants\n        ].sort();\n        // Check if reactants match (allowing for different quantities)\n        const matches = sortedReactants.every((symbol)=>reactionReactants.includes(symbol)) && reactionReactants.every((symbol)=>sortedReactants.includes(symbol));\n        if (matches) {\n            return reaction;\n        }\n    }\n    return null;\n};\nconst getReactionsByType = (type)=>{\n    return reactions.filter((reaction)=>reaction.type === type);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/reactions.ts\n"));

/***/ })

});